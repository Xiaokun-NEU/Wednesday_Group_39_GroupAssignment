/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.ProductManagement.Product;
import model.Supplier.Supplier;
import model.Supplier.SupplierDirectory;

/**
 *
 * @author yangj
 */
public class priceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form priceJPanel
     */
    private final SupplierDirectory supplierDirectory;
    
    public priceJPanel(JPanel workPanel, SupplierDirectory supplierDirectory) {       
        this.supplierDirectory = supplierDirectory;
        initComponents();
        populateSupplierCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSupplier = new javax.swing.JComboBox<>();
        lblSupplier = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrice = new javax.swing.JTable();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();

        cmbSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierActionPerformed(evt);
            }
        });

        lblSupplier.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        lblSupplier.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSupplier.setText("Choose Supplier:");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tblPrice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product", "Sales", "Purchase Price", "Target Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrice);

        lblPrice.setText("Target Price:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSupplier)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnView))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnView))
                    .addComponent(lblSupplier))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateSupplierCombo() {
        cmbSupplier.removeAllItems();

        if (supplierDirectory.getSuplierList().isEmpty()) {
        Supplier supplier1 = new Supplier("Supplier1");
        supplier1.getProductCatalog().addProduct(new Product("Product1", 100, 50, 70));

        Supplier supplier2 = new Supplier("Supplier2");
        supplier2.getProductCatalog().addProduct(new Product("Product2", 150, 60, 90));

        Supplier supplier3 = new Supplier("Supplier3");
        supplier3.getProductCatalog().addProduct(new Product("Product3", 200, 80, 120));

        Supplier supplier4 = new Supplier("Supplier4");
        supplier4.getProductCatalog().addProduct(new Product("Product4", 250, 100, 150));

        Supplier supplier5 = new Supplier("Supplier5");
        supplier5.getProductCatalog().addProduct(new Product("Product5", 300, 120, 180));

        supplierDirectory.getSuplierList().add(supplier1);
        supplierDirectory.getSuplierList().add(supplier2);
        supplierDirectory.getSuplierList().add(supplier3);
        supplierDirectory.getSuplierList().add(supplier4);
        supplierDirectory.getSuplierList().add(supplier5);
        }

        for (Supplier supplier : supplierDirectory.getSuplierList()) {
            cmbSupplier.addItem(supplier);
        }
    }
    private void cmbSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupplierActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        Supplier selectedSupplier = (Supplier) cmbSupplier.getSelectedItem();
        populateProductTable(selectedSupplier);
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<Object> cmbSupplier;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JTable tblPrice;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables


    private void populateProductTable(Supplier supplier) {
        DefaultTableModel model = (DefaultTableModel) tblPrice.getModel();
        model.setRowCount(0); 

        if (supplier != null && supplier.getProductCatalog() != null) {
            for (Product product : supplier.getProductCatalog().getProductList()) { 
                model.addRow(new Object[]{      
                    product.getName(),
                    product.getAvailability(),
                    product.getFloorPrice()
                });
            }
        }
    }
}
